name: Build and Arm64-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Install NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip
        unzip android-ndk-r21d-linux-x86_64.zip
        echo "NDK_HOME=${GITHUB_WORKSPACE}/android-ndk-r21d" >> $GITHUB_ENV
        echo "${GITHUB_WORKSPACE}/android-ndk-r21d" >> $GITHUB_PATH

    - name: Setup AR
      run: echo "AR_aarch64_linux_android=${NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar" >> $GITHUB_ENV

    - name: Install bzip2 and zstd
      run: sudo apt-get install -y libbz2-dev libzstd-dev

    - name: Setup Rust target
      run: rustup target add aarch64-linux-android

    - name: Build
      run: |
        export CC=${NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang
        cargo build --release --target=aarch64-linux-android

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-binary
        path: target/aarch64-linux-android/release/my-binary
